// Please make sure that all entries preceded by a comment including
// the "FIXME" keyword are changed before running Melissa with this
// config file
{
    "server_filename": "heatpde_sa_server.py",
    "server_class": "HeatPDEServerSA",
    "output_dir": "../output",
    "study_options": {
        "field_names": [
            "temperature"
        ],
        // when Sobol indices are computed, parameter_sweep_size is the number of groups to execute
        // otherwise it is the number of clients (i.e. simulations) to execute
        "parameter_sweep_size": 1,
        "num_samples": 5,
        "nb_parameters": 1,
        "parameter_range": [1000000, 2000000],
        "simulation_timeout": 10000,
        "crashes_before_redraw": 100
    },

    "sa_config": {
        "mean": true,
        "variance": true,
        "skewness": false,
        "kurtosis": false,
        "sobol_indices": false
    },
    "launcher_config": {
        // the standard oar scheduler is invoked with the following options
				"http_port": 6666,
        "scheduler": "oar",
        "scheduler_arg_server": [
            "core=1,walltime=00:08:00"
        ],
        "scheduler_arg_client": [
            "core=4,walltime=00:05:00"
        ],
        // otherwise an hybrid scheduling strategy based on job containers
        // and taking advantage of the best-effort queue can be requested
        // "scheduler": "oar-hybrid",
        // "container_max_number_of_clients": 5,
        // "besteffort_allocation_frequency": 2,
        // "scheduler_arg_container": [
        //     "core=6,walltime=01:10:00"
        // ],
        // "scheduler_arg_server": [
        //     "core=1,walltime=01:00:00"
        // ],
        // "scheduler_arg_client": [
        //     "core=1,walltime=00:10:00"
        // ],
        "fault_tolerance": false,
        "verbosity": 3
    },
    "client_config": {
        // FIXME: the executable command needs to be replaced with the appropriate path
        "executable_command": "../msolve-app/c-wrapper/build/heatc",
        // all bash commands to be executed on the job node prior to melissa study
        "preprocessing_commands": [
						//"export DOTNET_ROOT=$(which dotnet)",
						"export DOTNET_ROOT=$HOME/.dotnet",
						"export PATH=$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools",
						"export TERM=linux",
				//"wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh",
				//"chmod +x ./dotnet-install.sh",
				//"./dotnet-install.sh --channel 6.0 --runtime aspnetcore"
        ]
    },
    "server_config": {
        // all bash commands to be executed on the job node prior to melissa study
        "preprocessing_commands": [
						". $HOME/spack/share/spack/setup-env.sh",
            "spack load melissa-api",
            "spack load py-melissa-core",
				]
		}

}
